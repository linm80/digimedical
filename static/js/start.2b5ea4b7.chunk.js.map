{"version":3,"sources":["components/cards/GradientWithRadialProgressCard.js","components/Dropzone.js","components/VideosList.js","components/modal/LargeModal.js","components/modal/rightmodal.js","views/app/headsets-dash/start.js"],"names":["GradientWithRadialProgressCard","onClick","this","props","customOnClick","Card","className","CardBody","icon","title","detail","strokeWidth","value","nVideos","text","Component","ReactDOMServer","require","dropzoneComponentConfig","postUrl","dropzoneConfig","uploadMultiple","thumbnailHeight","maxFilesize","previewTemplate","renderToStaticMarkup","data-dz-thumbnail","data-dz-name","data-dz-size","data-dz-uploadprogress","href","data-dz-remove","headers","DropzoneExample","state","File","myDropzone","removeAllFiles","file","setState","newDate","Date","cDate","getDate","getMonth","getFullYear","console","log","onDrop","config","djsConfig","eventHandlers","addedfile","onDropInside","Button","color","onThumbVideo","headsetID","videoTitle","path","videoPath","descr","videoDescription","status","createDate","onHideAddVideoView","IntlMessages","id","connect","VideosList","acceptedFiles","videoThumb","Files","titleHandleChange","bind","pathHandleChange","descriptionHandleChange","event","target","addListView","date","indexOfHeadset","getUTCFullYear","headsetIndex","videosListOutput","allvids","allVideos","videoArray","Object","values","stateAddVideoModal","length","outline","onShowAddVideoView","onHeadsetRemoved","CardTitle","options","suppressScrollX","wheelPropagation","slice","map","video","index","badgeColor","playIcon","videoCurrentStat","key","to","src","thumbPath","alt","Badge","pill","class","onPlayVideo","onDeleteVideo","Col","sm","md","size","offset","Alert","Row","xxs","Form","Label","Input","type","onChange","Dropzone","stateLoadingVideo","Spinner","style","width","height","headsets","vLoading","addVideoModal","onVideoAdded","ModalUi","toggleLarge","prevState","modalLarge","videos","nApps","Modal","isOpen","toggle","ModalHeader","ModalBody","toggleRight","modalRight","uniqueKey","rand","generate","modal","headsetName","nameValid","handleChange","handleSubmit","onHeadsetAdded","preventDefault","block","wrapClassName","nHeadsets","CardImg","top","onSubmit","for","ModalFooter","onHeadsetAllListed","Start","firstLoad","headsetArray","onVideoAllListed","stateLoading","stateHeadsets","headset","it","deleted","numberVideos","numberApss","stateVideos","Container","xs","loading"],"mappings":"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","file":"static/js/start.2b5ea4b7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\n\r\nclass GradientWithRadialProgressCard extends Component {\r\n  render(){\r\n  return (\r\n    <div onClick ={this.props.customOnClick}>\r\n      <Card className=\"progress-banner \">\r\n        <CardBody className=\"justify-content-between d-flex flex-row align-items-center\">\r\n          <div>\r\n            <i\r\n              className={`${this.props.icon} mr-2 text-white align-text-bottom d-inline-block`}\r\n            />\r\n            <div>\r\n              <p className=\"lead text-white\">{this.props.title}</p>\r\n              <p className=\"text-small text-white\">{this.props.detail}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"progress-bar-circle progress-bar-banner position-relative\">\r\n            <CircularProgressbar\r\n              strokeWidth={4}\r\n              \r\n              value={this.props.nVideos}\r\n              text={this.props.nVideos }\r\n            />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );}\r\n}\r\nexport default GradientWithRadialProgressCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport DropzoneComponent from \"react-dropzone-component\";\r\nimport \"dropzone/dist/min/dropzone.min.css\";\r\nimport { Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { onThumbVideo, onHideAddVideoView } from \"../redux/headsets/actions\";\r\nimport IntlMessages from \"../helpers/IntlMessages\";\r\n\r\nvar ReactDOMServer = require(\"react-dom/server\");\r\n\r\nvar dropzoneComponentConfig = {\r\n  postUrl: \"no-url\"\r\n};\r\nvar dropzoneConfig = {\r\n  uploadMultiple: false,\r\n  thumbnailHeight: 160,\r\n  maxFilesize: 2,\r\n  previewTemplate: ReactDOMServer.renderToStaticMarkup(\r\n    <div className=\"dz-preview dz-file-preview mb-3\">\r\n      <div className=\"d-flex flex-row \">\r\n        <div className=\"p-0 w-30 position-relative\">\r\n          \r\n          <div className=\"preview-container\">\r\n            {/*  eslint-disable-next-line jsx-a11y/alt-text */}\r\n            <img data-dz-thumbnail className=\"img-thumbnail border-0\" />\r\n            <i className=\"simple-icon-doc preview-icon\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"pl-3 pt-2 pr-2 pb-1 w-70 dz-details position-relative\">\r\n          <div>\r\n            {\" \"}\r\n            <span data-dz-name />{\" \"}\r\n          </div>\r\n          <div className=\"text-primary text-extra-small\" data-dz-size />\r\n          <div className=\"dz-progress\">\r\n            <span className=\"dz-upload\" data-dz-uploadprogress />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <a href=\"#/\" className=\"remove\" data-dz-remove>\r\n        {\" \"}\r\n        <i className=\"glyph-icon simple-icon-trash\" />{\" \"}\r\n      </a>\r\n    </div>\r\n  ),\r\n  headers: { \"My-Awesome-Header\": \"header value\" }\r\n};\r\n\r\nclass DropzoneExample extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      File: \"\"\r\n    };\r\n  }\r\n  clear() {\r\n    this.myDropzone.removeAllFiles(true);\r\n  }\r\n\r\n  onDropInside(file) {\r\n    this.setState({ File: file });\r\n  }\r\n\r\n  render() {\r\n    let newDate = new Date();\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n\r\n    // return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\r\n    let cDate = date + \"/\" + month + \"/\" + year;\r\n    console.log(\"DropzoneExample -> render -> cDate\", cDate);\r\n    return (\r\n      <Fragment>\r\n        <DropzoneComponent\r\n          onDrop={this.props.onDrop}\r\n          config={dropzoneComponentConfig}\r\n          djsConfig={dropzoneConfig}\r\n          eventHandlers={{\r\n            addedfile: file => {\r\n              this.onDropInside(file);\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          className=\"mt-3\"\r\n          color=\"primary\"\r\n          onClick ={() => {\r\n            console.log(this.props.nVideos);\r\n            this.props.onThumbVideo(\r\n              {\r\n                headsetID: this.props.headsetID,\r\n                title: this.props.videoTitle,\r\n                path: this.props.videoPath,\r\n                descr: this.props.videoDescription,\r\n                status: false,\r\n                createDate: cDate\r\n              },\r\n              this.state.File,\r\n              this.props.nVideos\r\n            );\r\n            this.props.onHideAddVideoView();\r\n            \r\n          }}\r\n        >\r\n          <IntlMessages id=\"forms.video.submit\" />\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { onThumbVideo, onHideAddVideoView })(DropzoneExample);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Badge,\r\n  Col,\r\n  Alert,\r\n  Row,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Spinner\r\n} from \"reactstrap\";\r\nimport Dropzone from \"../components/Dropzone\";\r\nimport { Colxx } from \"../components/common/CustomBootstrap\";\r\nimport IntlMessages from \"../helpers/IntlMessages\";\r\n// import * as actionTypes from \"../redux/actions\";\r\nimport {\r\n  onVideoAdded,\r\n  onHeadsetRemoved,\r\n  onPlayVideo,\r\n  onDeleteVideo,\r\n  onShowAddVideoView,\r\n} from \"../redux/actions\";\r\n\r\nclass VideosList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // addListView: false,\r\n      videoTitle: \"Title\",\r\n      videoPath: \"\",\r\n      videoDescription: \"\",\r\n      videoThumb: \"\",\r\n      Files: []\r\n    };\r\n    this.titleHandleChange = this.titleHandleChange.bind(this);\r\n    this.pathHandleChange = this.pathHandleChange.bind(this);\r\n    this.descriptionHandleChange = this.descriptionHandleChange.bind(this);\r\n  }\r\n\r\n  // showAddVideoView = () => {\r\n  //   this.setState({ addListView: true });\r\n  // };\r\n\r\n  // hideAddVideoView = () => {\r\n  //   this.setState({ addListView: false });\r\n  // };\r\n\r\n  titleHandleChange(event) {\r\n    this.setState({ videoTitle: event.target.value });\r\n  }\r\n  pathHandleChange(event) {\r\n    this.setState({ videoPath: event.target.value });\r\n  }\r\n  descriptionHandleChange(event) {\r\n    this.setState({ videoDescription: event.target.value });\r\n  }\r\n\r\n  onDrop = acceptedFiles => {\r\n    console.log(\"acceptedFiles\");\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.addListView);\r\n\r\n    let date = new Date();\r\n    const currentDate =\r\n      date.getDate() +\r\n      \"/\" +\r\n      (date.getMonth() + 1) +\r\n      \"/\" +\r\n      date.getUTCFullYear();\r\n\r\n    const indexOfHeadset = this.props.headsetIndex;\r\n    let videosListOutput = null;\r\n    let allvids = {};\r\n    // console.log(this.props.allVideos[indexOfHeadset]);\r\n    if (this.props.allVideos[indexOfHeadset]) {\r\n      allvids = this.props.allVideos[indexOfHeadset];\r\n    }\r\n    const videoArray = Object.values(allvids);\r\n\r\n    // const videoArray = allVideoArray.filter(function(itm) {\r\n    //   return indexOfHeadset.localeCompare(itm.headsetID) === 0;\r\n    // });\r\n    // console.log(videoArray);\r\n\r\n    if (this.props.stateAddVideoModal === false) {\r\n      if (videoArray && videoArray.length > 0) {\r\n        videosListOutput = (\r\n          <Card>\r\n            <div className=\"position-absolute card-top-buttons\">\r\n              <Button color=\"primary\" outline onClick={this.props.onShowAddVideoView}>\r\n                <IntlMessages id=\"forms.video.add\" />\r\n              </Button>\r\n            </div>\r\n            <div className=\"card-top-buttons\">\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.props.onHeadsetRemoved(indexOfHeadset)}\r\n              >\r\n                <IntlMessages id=\"forms.headset.remove\" />\r\n              </Button>\r\n            </div>\r\n            <CardBody>\r\n              <CardTitle></CardTitle>\r\n              <div className=\"scroll dashboard-list-with-thumbs\">\r\n                <PerfectScrollbar\r\n                  options={{ suppressScrollX: true, wheelPropagation: false }}\r\n                >\r\n                  {videoArray\r\n                    .slice(0, videoArray.length)\r\n                    .map((video, index) => {\r\n                      // console.log(video)\r\n                      // if (video.deleted === \"no\") {\r\n                      let badgeColor = \"danger\";\r\n                      let playIcon = \"simple-icon-control-play\";\r\n                      let videoCurrentStat = \"NOT PLAYING\";\r\n                      if (video.status === false) {\r\n                        videoCurrentStat = \"NOT PLAYING\";\r\n                        badgeColor = \"danger\";\r\n                        playIcon = \"simple-icon-control-play\";\r\n                      } else {\r\n                        videoCurrentStat = \"PLAYING\";\r\n                        badgeColor = \"primary\";\r\n                        playIcon = \"simple-icon-control-pause\";\r\n                      }\r\n                      return (\r\n                        <div key={index} className=\"d-flex flex-row mb-3\">\r\n                          <NavLink\r\n                            to=\"/app/pages/product/details\"\r\n                            className=\"d-block position-relative\"\r\n                          >\r\n                            <img\r\n                              src={video.thumbPath}\r\n                              alt={video.title}\r\n                              className=\"list-thumbnail border-0\"\r\n                            />\r\n                            <Badge\r\n                              key={index}\r\n                              className=\"position-absolute badge-top-right\"\r\n                              color={badgeColor}\r\n                              pill\r\n                            >\r\n                              {videoCurrentStat}\r\n                            </Badge>\r\n                          </NavLink>\r\n\r\n                          <div className=\"pl-3 pt-2 pr-2 pb-2\">\r\n                            <NavLink to=\"/app/pages/product/details\">\r\n                              <p className=\"list-item-heading\">{video.title}</p>\r\n                              <div className=\"pr-4\">\r\n                                <p className=\"text-muted mb-1 text-small\">\r\n                                  {video.descr}\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"text-primary text-small font-weight-medium d-none d-sm-block\">\r\n                                {video.createDate}\r\n                              </div>\r\n                            </NavLink>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div class=\"col-sm\">\r\n                              <Badge\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  this.props.onPlayVideo(\r\n                                    video.headsetID,\r\n                                    video.id,\r\n                                    video.status\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className={playIcon}></i>\r\n                              </Badge>\r\n                            </div>\r\n                            \r\n\r\n                            <div class=\"col-sm\">\r\n                              <Badge\r\n                                color=\"danger\"\r\n                                onClick={() => {\r\n                                  this.props.onDeleteVideo(\r\n                                    video.headsetID,\r\n                                    video.id,\r\n                                    this.props.nVideos\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"simple-icon-close\"></i>\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                      // }else{\r\n                      //   console.log(video);\r\n                      // }\r\n                    })}\r\n                </PerfectScrollbar>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        );\r\n      } else {\r\n        videosListOutput = (\r\n          <Card>\r\n            <div className=\"position-absolute card-top-buttons\">\r\n              <Button color=\"primary\" outline onClick={this.props.onShowAddVideoView}>\r\n                <IntlMessages id=\"forms.video.add\" />\r\n              </Button>\r\n            </div>\r\n            <div className=\"card-top-buttons\">\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.props.onHeadsetRemoved(indexOfHeadset)}\r\n              >\r\n                <IntlMessages id=\"forms.headset.remove\" />\r\n              </Button>\r\n            </div>\r\n            <CardBody>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Alert color=\"warning\">\r\n                  <IntlMessages id=\"video.warning.noHeadset\" />\r\n\r\n                </Alert>\r\n              </Col>\r\n            </CardBody>\r\n          </Card>\r\n        );\r\n      }\r\n    } else {\r\n      videosListOutput = (\r\n        <Row className=\"mb-4\">\r\n          <Colxx xxs=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle><IntlMessages id=\"forms.video.add\" /></CardTitle>\r\n\r\n                <Form>\r\n                  <Label className=\"form-group has-float-label\">\r\n                    <Input type=\"text\" onChange={this.titleHandleChange} />\r\n                    <IntlMessages id=\"forms.video.title\" />\r\n                  </Label>\r\n                  <Label className=\"form-group has-float-label\">\r\n                    <Input type=\"text\" onChange={this.pathHandleChange} />\r\n                    <IntlMessages id=\"forms.video.path\" />\r\n                  </Label>\r\n                  <Label className=\"form-group has-float-label\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={this.descriptionHandleChange}\r\n                    />\r\n                    <IntlMessages id=\"forms.video.description\" />\r\n                  </Label>\r\n                  <Dropzone\r\n                    headsetID={this.props.headsetIndex}\r\n                    videoTitle={this.state.videoTitle}\r\n                    videoPath={this.state.videoPath}\r\n                    videoDescription={this.state.videoDescription}\r\n                    nVideos={this.props.nVideos}\r\n                    onDrop={this.onDrop.bind(this)}\r\n                  ></Dropzone>\r\n                </Form>\r\n                {/* <Button\r\n                  className=\"mt-3\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    this.props.onVideoAdded(\r\n                      this.state.videoTitle,\r\n                      this.state.videoPath,\r\n                      this.state.videoDescription\r\n                    );\r\n                    this.hideAddVideoView();\r\n                  }}\r\n                >\r\n                  <IntlMessages id=\"forms.video.submit\" />\r\n                </Button> */}\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      );\r\n    }\r\n    if(this.props.stateLoadingVideo === false){return <Fragment>{videosListOutput}</Fragment>;}else{\r\n      return (\r\n        <div class=\"container h-100\">\r\n          <div class=\"row h-100 justify-content-center align-items-center\">\r\n            <Spinner color=\"primary\" style={{ width: '3rem', height: '3rem' }} />\r\n          </div>\r\n        </div>\r\n      \r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stateLoadingVideo: state.headsets.vLoading,\r\n    stateAddVideoModal : state.headsets.addVideoModal\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  onVideoAdded,\r\n  onHeadsetRemoved,\r\n  onPlayVideo,\r\n  onDeleteVideo,\r\n  onShowAddVideoView\r\n})(VideosList);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, Col } from \"reactstrap\";\r\n\r\nimport GradientWithRadialProgressCard from \"../cards/GradientWithRadialProgressCard\";\r\nimport VideosList from \"../VideosList\";\r\n\r\nexport default class ModalUi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalLarge: false\r\n    };\r\n    this.toggleLarge = this.toggleLarge.bind(this);\r\n  }\r\n\r\n  toggleLarge = () => {\r\n    this.setState(prevState => ({\r\n      modalLarge: !prevState.modalLarge\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.videos);\r\n    let allvids;\r\n    if(this.props.videos){\r\n      allvids = this.props.videos\r\n    }else{\r\n      allvids={}\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Col md={4} className=\"mb-3\">\r\n          <GradientWithRadialProgressCard\r\n            icon=\"\"\r\n            title={this.props.title}\r\n            detail={this.props.detail}\r\n            nVideos={this.props.nVideos}\r\n            nApps={this.props.nApps}\r\n            customOnClick={this.toggleLarge}\r\n            videos={this.props.videos}\r\n          />\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modalLarge}\r\n          size=\"lg\"\r\n          toggle={this.toggleLarge}\r\n          className=\"mb-7\"\r\n        >\r\n          <ModalHeader toggle={this.toggleLarge}>\r\n            {this.props.title}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <VideosList\r\n              allVideos={allvids}\r\n              headsetIndex={this.props.headsetIndex}\r\n              nVideos={this.props.nVideos}\r\n            />\r\n          </ModalBody>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { connect } from \"react-redux\";\r\nimport { onHeadsetAdded, onHeadsetAllListed } from \"../../redux/actions\";\r\nimport rand from \"random-key\";\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  CardImg,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n  FormText\r\n} from \"reactstrap\";\r\n\r\nclass ModalUi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      modalRight: false,\r\n      headsetName: \"\",\r\n      uniqueKey: rand.generate(8),\r\n      nameValid: \"form-control\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleRight = () => {\r\n    this.setState(prevState => ({\r\n      modalRight: !prevState.modalRight\r\n    }));\r\n    this.setState({ uniqueKey: rand.generate(8) });\r\n  };\r\n\r\n  handleChange(event) {\r\n    this.setState({ headsetName: event.target.value });\r\n    if (event.target.value.length > 2) {\r\n      this.setState({ nameValid: \"form-control is-valid\" });\r\n    } else {\r\n      this.setState({ nameValid: \"form-control is-invalid\" });\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    if (this.state.nameValid === \"form-control is-valid\") {\r\n      this.props.onHeadsetAdded(\r\n        this.state.uniqueKey,\r\n        this.state.headsetName,\r\n        \"NOT CONNECTED\",\r\n        0,\r\n        0,\r\n        \"no\",\r\n        this.state.uniqueKey\r\n      );\r\n      this.toggleRight();\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <Fragment>\r\n      //     <Row>\r\n      //         <Colxx xxs=\"12\">\r\n\r\n      <div>\r\n        <Button color=\"primary\" size=\"lg\" block onClick={this.toggleRight}>\r\n        <IntlMessages id=\"forms.headset.add\" />\r\n\r\n        </Button>\r\n        <Modal\r\n          isOpen={this.state.modalRight}\r\n          toggle={this.toggleRight}\r\n          wrapClassName=\"modal-right\"\r\n        >\r\n          <ModalHeader toggle={this.toggleRight}>\r\n          <IntlMessages id=\"forms.headset.add\" /> {this.props.nHeadsets}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div>\r\n              <Card>\r\n                <CardImg\r\n                  top\r\n                  width=\"100%\"\r\n                  src=\"/assets/img/modern-technology-vr-headset-in-woman-hands-P2JDRGV.jpg\"\r\n                  alt=\"Card image cap\"\r\n                />\r\n                <CardBody>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    \r\n                      <label for=\"nameHeadset\"><IntlMessages id=\"forms.headset.add.name\" /></label>\r\n                      <input\r\n                        className={this.state.nameValid}\r\n                        onChange={this.handleChange}\r\n                        id=\"nameHeadset\"\r\n                      />\r\n                      <div class=\"valid-feedback\"><IntlMessages id=\"forms.headset.add.name.valid\" /></div>\r\n                      <div class=\"invalid-feedback\">\r\n                      <IntlMessages id=\"forms.headset.add.name.invalid\" />\r\n                      </div>\r\n                      \r\n                    \r\n\r\n                   \r\n                      <label for=\"passHeadset\"><IntlMessages id=\"forms.headset.add.password\" /></label>\r\n                      \r\n                      <kbd class=\"display-4\">{this.state.uniqueKey}</kbd>\r\n                    \r\n                  </form>\r\n                  \r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                if (this.state.nameValid === \"form-control is-valid\") {\r\n                  this.props.onHeadsetAdded(\r\n                    this.state.uniqueKey,\r\n                    this.state.headsetName,\r\n                    \"NOT CONNECTED\",\r\n                    0,\r\n                    0,\r\n                    \"no\",\r\n                    this.state.uniqueKey\r\n                  );\r\n                }\r\n                // this.props.onHeadsetAllListed();\r\n                this.toggleRight();\r\n              }}\r\n            >\r\n              <IntlMessages id=\"forms.headset.add\" />\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={this.toggleRight}>\r\n              <IntlMessages id=\"general.cancel\" />\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n\r\n      //         </Colxx>\r\n      //     </Row>\r\n      // </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { onHeadsetAdded, onHeadsetAllListed })(ModalUi);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Alert, Col, Container, Spinner } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\n\r\nimport LargeModal from \"../../../components/modal/LargeModal\";\r\n\r\nimport Modal from \"../../../components/modal/rightmodal\";\r\n\r\nimport {\r\n  onHeadsetAllListed,\r\n  onVideoAllListed\r\n} from \"../../../redux/headsets/actions\";\r\n\r\nclass Start extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstLoad: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.firstLoad === true) {\r\n      this.props.onHeadsetAllListed();\r\n      this.props.onVideoAllListed();\r\n      this.setState(prevState => ({\r\n        firstLoad: false\r\n      }));\r\n    }\r\n    if(this.props.stateLoading === false){\r\n      let headsets;\r\n      let headsetArray;\r\n      let videos;\r\n      let videoArray;\r\n\r\n      if (this.props.stateHeadsets) {\r\n        headsetArray = Object.values(this.props.stateHeadsets);\r\n      }\r\n      // console.log(this.props.stateVideos);\r\n\r\n\r\n      if (headsetArray && headsetArray.length > 0) {\r\n        // eslint-disable-next-line array-callback-return\r\n        headsets = headsetArray.map((headset, index) => {\r\n          let headsetid = headset.it;\r\n          if (headset.deleted === \"no\") {\r\n            return (\r\n              <LargeModal\r\n                icon=\"\"\r\n                title={headset.headsetName}\r\n                detail={headset.status}\r\n                nVideos={headset.numberVideos}\r\n                nApps={headset.numberApss}\r\n                videos={this.props.stateVideos}\r\n                headsetIndex={headset.id}\r\n                key={headset.id}\r\n              />\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        headsets = (\r\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <Alert color=\"warning\">\r\n              <IntlMessages id=\"headset.warning.noHeadset\" />\r\n            </Alert>\r\n          </Col>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Fragment>\r\n          <Container>\r\n            <Row xs=\"2\">{headsets}</Row>\r\n            <Row>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Modal />\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <ImageOverlayCard /> */}\r\n          </Container>\r\n        </Fragment>\r\n      );\r\n    }else{\r\n      return(\r\n        <div class=\"container h-100\">\r\n          <div class=\"row h-100 justify-content-center align-items-center\">\r\n            <Spinner color=\"primary\" style={{ width: '3rem', height: '3rem' }} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stateHeadsets: state.headsets.headsets,\r\n    stateVideos: state.headsets.videos,\r\n    stateLoading: state.headsets.loading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  onHeadsetAllListed,\r\n  onVideoAllListed\r\n})(Start);\r\n"],"sourceRoot":""}